<templateSet group="JavaScript">
  <template name="dlog" value="console.log('\n\n\n\n\n', $data$);$END$" description="Debug log" toReformat="false" toShortenFQNames="true">
    <variable name="data" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="req" value="const $module$ = require('$module$');$END$" description="Require" toReformat="false" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="try" value="try {&#10;    $tryBlock$   &#10;} catch (e) {&#10;    $catchBlock$&#10;}$END$" description="Try catch block" toReformat="false" toShortenFQNames="true">
    <variable name="tryBlock" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="catchBlock" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="llog" value="console.log($data$);$END$" description="Console log" toReformat="false" toShortenFQNames="true">
    <variable name="data" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="function" value="const $functionName$ = async ($functionParam$) =&gt; {&#10;    $functionBody$&#10;};$END$" description="Function" toReformat="false" toShortenFQNames="true">
    <variable name="functionName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="functionParam" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="functionBody" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
</templateSet>